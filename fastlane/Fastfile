# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#

# Uncomment the line if you want fastlane to automatically update itself
update_fastlane

REQUIRED_XCODE_VERSION = "9.4.1"
keychain_password = ENV["KEYCHAIN_PASSWORD"]
deployer_password = ENV["ARTIFACTORY_DEPLOYER_PASSWORD"]
provisioningProfile = nil
artifactory_distr = nil
export_method = nil
app_configuration = nil


testflight_user = "max.kazin@macys.com"

default_platform(:ios)

platform :ios do

  private_lane :verify_xcode_version do
    xcversion(version: REQUIRED_XCODE_VERSION)
    ensure_xcode_version(version: REQUIRED_XCODE_VERSION)
  end

  private_lane :hal_review do
    verify_xcode_version
    run_tests(
      workspace: "HAL-iOS.xcworkspace",
      scheme: "HAL-iOS",
      configuration: "Debug",
      buildlog_path: "./fastlane/logs",
      derived_data_path: "./fastlane/derived",
      output_directory: "./fastlane/output",
      code_coverage: "true",
      device: "iPhone X",
      clean: "true"
      )
  end

  private_lane :hal_deploy do
    verify_xcode_version
   if is_ci?
     unlock_keychain(
       path: "~/Library/Keychains/login.keychain-db",
       password: keychain_password
       )
   end
    build_ios_app(
      workspace: "HAL-iOS.xcworkspace",
      scheme: "HAL-iOS",
      configuration: app_configuration,
      build_path: "./fastlane/build",
      buildlog_path: "./fastlane/logs",
      derived_data_path: "./fastlane/derived",
      output_directory: "./fastlane/output",
      output_name: "hal.ipa",
      silent: true,
      clean: true,
      include_bitcode: false,
      skip_profile_detection: true,
      export_team_id: "8AS67DFAXH",
      export_method: export_method,
      export_xcargs: "-allowProvisioningUpdates",
      export_options: {
        signingStyle: "manual",
        provisioningProfiles: {
          "com.macys.mst.hal" => provisioningProfile
          }
      }
    )
    app_version = get_version_number(xcodeproj: "HAL-iOS.xcodeproj")
    artifactory(
      username: "deployer",
      password: deployer_password,
      endpoint: "http://ci-artifacts.devops.fds.com/artifactory/",
      file: "./fastlane/output/hal.ipa",
      repo: "mobileapps",
      repo_path: "/halIos/#{artifactory_distr}/hal-#{app_version}-#{last_git_commit[:abbreviated_commit_hash]}.ipa"
  )
  end

# CI lanes start here
  desc "Build HAL-iOS scheme and run unit tests"
  lane :review do
    hal_review
    #run_swiftlint
  end

  desc "Build HAL-iOS prod and upload IPA to Artifactory"
  lane :deployProd do
    provisioningProfile = "HalProd 6-13-18"
    artifactory_distr = "distribution"
    export_method = "enterprise"
    app_configuration = "Release"
    hal_deploy
  end

  desc "Build HAL-iOS prod and upload IPA to Artifactory"
  lane :deployDev do
    provisioningProfile = "HalDev"
    artifactory_distr = "development"
    app_configuration = "Debug"
    export_method = "development"
    hal_deploy
  end

end
